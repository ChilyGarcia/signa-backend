version: "3.9"

services:
  api:
    build: .
    env_file: .env
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - db  # Asegura que la base de datos se inicie antes de la API
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 15s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

  certbot:
    image: certbot/certbot:v2.11.0
    depends_on:
      - nginx
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do
      certbot renew --webroot -w /var/www/certbot --agree-tos --non-interactive && echo 'Renewed';
      sleep 12h;
      done"

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: signa
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

volumes:
  certbot-etc:
  certbot-web:
  postgres-data:
