user  nginx;
worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
  keepalive_timeout 65;
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml text/javascript;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # HTTP Server (Funciona tanto en desarrollo como producción)
  server {
    listen 80;
    server_name _;  # Acepta cualquier nombre de dominio

    # Para certificados SSL (producción)
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Proxy a la API
    location / {
      proxy_pass http://api:8000;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 75s;
      proxy_send_timeout 75s;
    }

    location /health {
      proxy_pass http://api:8000/health;
    }
  }

  # HTTPS Server (Solo se activa si existen certificados)
  server {
    listen 443 ssl http2;
    server_name _;  # Acepta cualquier nombre de dominio

    # Certificados SSL (auto-firmados o generados)
    ssl_certificate     /etc/nginx/ssl/certificate.crt;  # Ruta al certificado auto-firmado
    ssl_certificate_key /etc/nginx/ssl/private.key;      # Ruta a la clave privada auto-firmada

    # Configuración SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;

    client_max_body_size 25m;

    location / {
      proxy_pass http://api:8000;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 75s;
      proxy_send_timeout 75s;
    }

    location /health {
      proxy_pass http://api:8000/health;
    }
  }
}
